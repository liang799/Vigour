Index: app/src/main/java/com/sp/vigour/fragments/Home.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.sp.vigour.fragments;\r\n\r\nimport android.annotation.SuppressLint;\r\nimport android.content.Context;\r\nimport android.graphics.Color;\r\nimport android.graphics.Typeface;\r\nimport android.hardware.Sensor;\r\nimport android.hardware.SensorManager;\r\nimport android.net.ConnectivityManager;\r\nimport android.net.NetworkInfo;\r\nimport android.os.Bundle;\r\nimport android.os.Handler;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Button;\r\nimport android.widget.TextView;\r\n\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.navigation.Navigation;\r\n\r\nimport com.sp.vigour.Addhelper;\r\nimport com.sp.vigour.R;\r\n\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\n\r\nimport java.io.BufferedReader;\r\nimport java.io.IOException;\r\nimport java.io.InputStream;\r\nimport java.io.InputStreamReader;\r\nimport java.net.HttpURLConnection;\r\nimport java.net.MalformedURLException;\r\nimport java.net.URL;\r\nimport java.util.ArrayList;\r\nimport java.util.Random;\r\n\r\npublic class Home extends Fragment implements View.OnClickListener {\r\n    private Button detailsButt;\r\n    private TextView tips;\r\n    private TextView Vgr_Amount;\r\n    private TextView hide_indicator;\r\n    private TextView toggle_hide;\r\n    private boolean hidden = false;\r\n    private ArrayList<String> did_u_know;\r\n    private Handler mainHandler =  new Handler();\r\n    private SensorManager sensorManager;\r\n    private Sensor pedometer;\r\n    private TextView insight_step;\r\n    private TextView insight_coin;\r\n    private Addhelper db;\r\n    private String amount;\r\n\r\n    public void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        sensorManager = (SensorManager) getActivity().getSystemService(Context.SENSOR_SERVICE);\r\n        pedometer = sensorManager.getDefaultSensor(Sensor.TYPE_STEP_COUNTER);\r\n        db = new Addhelper(getContext());\r\n    }\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, ViewGroup container,\r\n                             Bundle savedInstanceState) {\r\n        // Inflate the layout for this fragment\r\n        View view = inflater.inflate(R.layout.fragment_home, container, false);\r\n        tips = view.findViewById(R.id.tips);\r\n        detailsButt = view.findViewById(R.id.details_button);\r\n        detailsButt.setOnClickListener(this);\r\n        Vgr_Amount = view.findViewById(R.id.balance_home);\r\n        hide_indicator = view.findViewById(R.id.hideEye);\r\n        toggle_hide = view.findViewById(R.id.visibilitySwitch);\r\n        toggle_hide.setOnClickListener(this);\r\n        insight_step = view.findViewById(R.id.insight_step);\r\n        insight_coin = view.findViewById(R.id.insight_coin);\r\n\r\n        if (pedometer != null){\r\n            // Success! There's a pedometer.\r\n            did_u_know = new ArrayList<>();\r\n            new fetchData().start();\r\n        } else {\r\n            // Failure! No pedometer.\r\n            tips.setText(\"Error! Your hardware does not have a Pedometer.\");\r\n            tips.setTextColor(Color.parseColor(\"#EF4B39\"));\r\n            tips.setTypeface(tips.getTypeface(), Typeface.BOLD);\r\n        }\r\n\r\n            insight_coin.setText(db.coinInsight());\r\n            insight_step.setText(db.stepsInsight());\r\n\r\n        return view;\r\n    }\r\n\r\n    @Override\r\n    public void onResume() {\r\n        super.onResume();\r\n        amount = db.getVGR();\r\n        Vgr_Amount.setText(amount);\r\n    }\r\n\r\n    @Override\r\n    public void onClick(View v) {\r\n        switch (v.getId()) {\r\n            case R.id.visibilitySwitch:\r\n                if (hidden == false) {\r\n                    hide_indicator.setVisibility(View.VISIBLE);\r\n                    Vgr_Amount.setText(\"***\");\r\n                    hidden = true;\r\n                } else {\r\n                    hide_indicator.setVisibility(View.GONE);\r\n                    Vgr_Amount.setText(amount);\r\n                    hidden = false;\r\n                }\r\n                break;\r\n            case R.id.details_button:\r\n                Navigation.findNavController(v).navigate(R.id.action_home2_to_transactions);\r\n                break;\r\n            default:\r\n                throw new IllegalStateException(\"Unexpected value: \" + v.getId());\r\n        }\r\n    }\r\n\r\n    class fetchData extends Thread {    // to allow stuff to be run simultaneously\r\n        String data = \"\";\r\n\r\n        @Override\r\n        public void run(){\r\n            try {\r\n                URL url = new URL(\"https://api.npoint.io/cbb709d068583b916068\");\r\n//                URL url = new URL(\"https://opensheet.elk.sh/1y9yJlj3czkw9BDVR3d6BZXW_cOzpMNSxHkHlESlK4D4/1\");\r\n                HttpURLConnection httpURLConnection = (HttpURLConnection) url.openConnection();\r\n                InputStream is = httpURLConnection.getInputStream();\r\n                BufferedReader bufferedReader = new BufferedReader(new InputStreamReader(is));\r\n                String line;\r\n\r\n                while ((line = bufferedReader.readLine()) != null) {\r\n                    data += line;\r\n                }\r\n\r\n                if (!data.isEmpty()) {\r\n                    JSONObject jsonObject = new JSONObject(data);\r\n                    JSONArray facts_array = jsonObject.getJSONArray(\"Did you know?\");\r\n                    for (int i = 0; i < facts_array.length(); i++) {\r\n                        JSONObject facts = facts_array.getJSONObject(i);\r\n                        String fact = facts.getString(\"Did you know?\");\r\n                        did_u_know.add(fact);\r\n                    }\r\n                }\r\n            } catch (MalformedURLException e) {\r\n                e.printStackTrace();\r\n            } catch (IOException e) {\r\n                e.printStackTrace();\r\n            } catch (JSONException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            mainHandler.post( new Runnable() {\r\n                @Override\r\n                public void run() {\r\n                    if (isNetworkAvailable()) {\r\n                        int random = new Random().nextInt(did_u_know.size());\r\n                        tips.setText(did_u_know.get(random));\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private boolean isNetworkAvailable() {\r\n        ConnectivityManager connectivityManager\r\n                = (ConnectivityManager) getActivity().getSystemService(Context.CONNECTIVITY_SERVICE);\r\n        @SuppressLint(\"MissingPermission\") NetworkInfo activeNetworkInfo = connectivityManager.getActiveNetworkInfo();\r\n        return activeNetworkInfo != null && activeNetworkInfo.isConnected();\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/com/sp/vigour/fragments/Home.java b/app/src/main/java/com/sp/vigour/fragments/Home.java
--- a/app/src/main/java/com/sp/vigour/fragments/Home.java	(revision c03d9b5bd81a1e0e973d7a31062243844d9fdb21)
+++ b/app/src/main/java/com/sp/vigour/fragments/Home.java	(date 1643787139654)
@@ -85,8 +85,8 @@
             tips.setTypeface(tips.getTypeface(), Typeface.BOLD);
         }
 
-            insight_coin.setText(db.coinInsight());
-            insight_step.setText(db.stepsInsight());
+            //insight_coin.setText(db.coinInsight());
+            //insight_step.setText(db.stepsInsight());
 
         return view;
     }
